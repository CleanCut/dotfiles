#!/usr/bin/env bash

function msg() {
    echo "ðŸš€ $1"
}

function warn() {
    echo "ðŸŸ¡ $1"
}

function error() {
    echo "ðŸ›‘ $1"
}

if [[ "$(uname)" == "Darwin" ]]; then
    OS="macos"
else
    # shellcheck disable=SC1091
    . /etc/os-release
    OS="$ID"
fi
msg "Operating System: ${OS}"

# Hard link all the files in homefiles/ into ~/
for f in homefiles/.*; do
    file=$(basename "$f")
    if [[ $file == "." || $file == ".." ]]; then
        continue
    fi
    msg "Hard-linking ~/$file"
    ln -f "$(pwd)/homefiles/$file" "$HOME/$file" || error "Failed hard-linking ~/$file"

done

# Symlink directories into ~/
for dir in bin gitcompletion tmux vim; do
    # Remove any exsting symlink
    if [[ -d "$dir" ]]; then
        rm -f "$HOME/.$dir" || error "$HOME/.$dir isn't a symlink like I expected, so I'm not replacing it."
    fi
    msg "Sym-linking ~/.$dir/"
    ln -s "$(pwd)/${dir}" "$HOME/.$dir" || error "Failed to sym-link ~/.$dir/"

done

# Is rust installed?
if ! rustc --version >/dev/null; then
    # BP Dev environment, automatically install rust
    if [[ $USER == "build" && $HOME == "/workspace" ]]; then
        if [[ ! -f rustup-init.sh ]]; then
            curl --proto '=https' --tlsv1.2 -o rustup-init.sh -sSf https://sh.rustup.rs
            chmod a+x rustup-init.sh
        fi
        ./rustup-init.sh -y || error "Failed to install Rust ðŸ˜­"
        rm rustup-init.sh
    else
        warn "Rust is not installed. ðŸ˜•"
    fi
fi

msg "Updating vim plugins"
git submodule update --init --recursive || error "Failed to update vim plugins"
